From ffe270ed6c7eca1f5cb6eaf7d5035535530e63c7 Mon Sep 17 00:00:00 2001
From: Naveen Singh <naveen@nestlabs.com>
Date: Mon, 30 Oct 2017 23:22:34 +0100
Subject: [PATCH 06/12] struct ether_arp definition is missing in bionic

struct ether_arp is not defined in bionic. Introduced this definition
in gdhcp/ipv4ll.c and gdhcp/client.c under #ifdef ANDROID_COMPILE which
is defined in config.h by configure process
---
 gdhcp/client.c | 15 +++++++++++++++
 gdhcp/ipv4ll.c | 19 +++++++++++++++++++
 2 files changed, 34 insertions(+)

diff --git a/gdhcp/client.c b/gdhcp/client.c
index 3e67fcd5..f6148540 100644
--- a/gdhcp/client.c
+++ b/gdhcp/client.c
@@ -47,6 +47,21 @@
 #include "common.h"
 #include "ipv4ll.h"
 
+#ifdef ANDROID_COMPILE
+struct ether_arp {
+	struct   arphdr ea_hdr;                 /* fixed-size header */
+	u_int8_t arp_sha[ETHER_ADDR_LEN];       /* sender hardware address */
+	u_int8_t arp_spa[4];                    /* sender protocol address */
+	u_int8_t arp_tha[ETHER_ADDR_LEN];       /* target hardware address */
+	u_int8_t arp_tpa[4];                    /* target protocol address */
+} __packed;
+#define        arp_hrd ea_hdr.ar_hrd
+#define        arp_pro ea_hdr.ar_pro
+#define        arp_hln ea_hdr.ar_hln
+#define        arp_pln ea_hdr.ar_pln
+#define        arp_op  ea_hdr.ar_op
+#endif
+
 #define DISCOVER_TIMEOUT 5
 #define DISCOVER_RETRIES 6
 
diff --git a/gdhcp/ipv4ll.c b/gdhcp/ipv4ll.c
index d9001987..d550bf4d 100644
--- a/gdhcp/ipv4ll.c
+++ b/gdhcp/ipv4ll.c
@@ -18,6 +18,10 @@
  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  *
  */
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
 #include <string.h>
 #include <stdlib.h>
 #include <errno.h>
@@ -36,6 +40,21 @@
 #include "ipv4ll.h"
 #include "common.h"
 
+#ifdef ANDROID_COMPILE
+struct ether_arp {
+	struct   arphdr ea_hdr;                 /* fixed-size header */
+	u_int8_t arp_sha[ETHER_ADDR_LEN];       /* sender hardware address */
+	u_int8_t arp_spa[4];                    /* sender protocol address */
+	u_int8_t arp_tha[ETHER_ADDR_LEN];       /* target hardware address */
+	u_int8_t arp_tpa[4];                    /* target protocol address */
+} __packed;
+#define        arp_hrd ea_hdr.ar_hrd
+#define        arp_pro ea_hdr.ar_pro
+#define        arp_hln ea_hdr.ar_hln
+#define        arp_pln ea_hdr.ar_pln
+#define        arp_op  ea_hdr.ar_op
+#endif
+
 /**
  * Return a random link local IP (in host byte order)
  */
-- 
2.11.0

